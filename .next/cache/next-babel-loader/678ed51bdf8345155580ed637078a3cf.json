{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/cbkm/Documents/IPFS/myapps/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport ipfs from '../ipfs';\nimport React, { Component } from 'react';\nvar accepts = [{\n  name: \"images\",\n  acc: \"image/*\"\n}, {\n  name: \"audio\",\n  acc: \"audio/*\"\n}, {\n  name: \"pdf\",\n  acc: \"application/pdf,application/msword,\"\n}];\nexport var index = /*#__PURE__*/function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index() {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      file: null,\n      ipfsHash: null,\n      fileformat: \"null\",\n      fileLoaded: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureChange\", function (event) {\n      console.log(\"caputreFile\");\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          file: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.file);\n        console.log(_this.setState({\n          fileformat: \"res[0].hash \"\n        }));\n        console.log('ipfsHash', _this.state);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              console.log(\"onSubmit\");\n              ipfs.files.add(_this.state.file, function _callee(err, res) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!err) {\n                          _context.next = 3;\n                          break;\n                        }\n\n                        console.error(err);\n                        return _context.abrupt(\"return\");\n\n                      case 3:\n                        _this.setState({\n                          ipfsHash: res[0].hash\n                        });\n\n                        console.log(res);\n                        console.log('ipfsHash', _this.state.ipfsHash);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"format\", function _callee3(event) {\n      var value, format;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              value = event.target.value;\n              format = accepts.find(function (a) {\n                return a.name == value;\n              }).acc;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(_this.setState({\n                fileformat: format ? format : null\n              }));\n\n            case 4:\n              console.log(_this.state);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, __jsx(\"select\", {\n        onChange: this.format,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, __jsx(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \"Choose....\"), accepts.map(function (a) {\n        return __jsx(\"option\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }\n        }, a.name);\n      })), __jsx(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: this.captureChange,\n        accept: this.state.fileformat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }), this.state.fileLoaded ? __jsx(\"button\", {\n        onClick: this.submit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 39\n        }\n      }, \"Submit\") : \"Load file\", this.state.ipfsHash ? this.state.ipfsHash : \"Upload some file\", __jsx(\"img\", {\n        src: \"https://ipfs.io/ipfs/\".concat(this.state.ipfsHash),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return index;\n}(Component);\nexport default index;","map":{"version":3,"sources":["/home/cbkm/Documents/IPFS/myapps/pages/index.js"],"names":["ipfs","React","Component","accepts","name","acc","index","file","ipfsHash","fileformat","fileLoaded","event","console","log","preventDefault","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","Buffer","result","state","add","err","res","error","hash","value","format","find","a","map","captureChange","submit"],"mappings":"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","sourcesContent":["import ipfs from '../ipfs';\nimport React, { Component } from 'react'\n\nconst accepts = [\n    { name: \"images\", acc: \"image/*\", },\n    { name: \"audio\", acc: \"audio/*\", },\n    { name: \"pdf\", acc: \"application/pdf,application/msword,\" }\n\n]\n\n\n\n\nexport class index extends Component {\n    state = {\n        file: null,\n        ipfsHash: null,\n        fileformat: \"null\",\n        fileLoaded:false\n    }\n\n    captureChange = (event) => {\n        console.log(\"caputreFile\")\n        event.preventDefault()\n        const file = event.target.files[0]\n        const reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => {\n            this.setState({ file: Buffer(reader.result) })\n            console.log('buffer', this.state.file)\n            console.log(this.setState({ fileformat: \"res[0].hash \" }))\n            console.log('ipfsHash', this.state)\n        }\n    }\n\n    submit = async () => {\n\n\n        event.preventDefault()\n        console.log(\"onSubmit\")\n\n        ipfs.files.add(this.state.file, async (err, res) => {\n            if (err) {\n                console.error(err)\n                return\n            }\n            this.setState({ ipfsHash: res[0].hash })\n            console.log(res)\n            console.log('ipfsHash', this.state.ipfsHash)\n\n\n        })\n    }\n    format = async (event) => {\n        let value = event.target.value\n        let format = accepts.find(a => a.name == value).acc\n\n        await this.setState({ fileformat: format ? format : null })\n        console.log(this.state)\n\n\n\n    }\n    render() {\n        return (\n            <div>\n                <select onChange={this.format}>\n                    <option>Choose....</option>\n                    {\n                        accepts.map(a =>\n                            <option>{a.name}</option>\n                        )\n                    }\n                </select>\n                <input type=\"file\" multiple onChange={this.captureChange} accept={this.state.fileformat} />\n               {this.state.fileLoaded?<button onClick={this.submit}>Submit</button>:\"Load file\"} \n                {this.state.ipfsHash ? this.state.ipfsHash : \"Upload some file\"}\n                <img src={`https://ipfs.io/ipfs/${this.state.ipfsHash}`} />\n\n\n            </div>\n        )\n    }\n}\n\nexport default index\n\n\n"]},"metadata":{},"sourceType":"module"}