{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/cbkm/Documents/IPFS/myapps/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport ipfs from '../ipfs';\nimport React, { Component } from 'react';\nexport var index = /*#__PURE__*/function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index() {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"captureChange\", function (event) {\n      console.log(\"caputreFile\");\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          file: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.file);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function () {\n      event.preventDefault();\n      console.log(\"onSubmit\");\n      ipfs.files.add(_this.state.file, function _callee(err, res) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!err) {\n                  _context.next = 3;\n                  break;\n                }\n\n                console.error(err);\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _this.setState({\n                  ipfsHash: res[0].hash\n                });\n\n                console.log('ipfsHash', _this.state.ipfsHash);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        file: null,\n        ipfsHash: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, __jsx(\"input\", {\n        type: \"file\",\n        onChange: this.captureChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }), __jsx(\"button\", {\n        onClick: this.submit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"Submit\"), this.ipfsHash ? this.state.ipfsHash : \"Upload some file\");\n    }\n  }]);\n\n  return index;\n}(Component);\nexport default index;","map":{"version":3,"sources":["/home/cbkm/Documents/IPFS/myapps/pages/index.js"],"names":["ipfs","React","Component","index","event","console","log","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","Buffer","result","state","add","err","res","error","ipfsHash","hash","captureChange","submit"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,WAAaC,KAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,oEAQoB,UAACC,KAAD,EAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;AACA,UAAMC,IAAI,GAAGJ,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAf;AACAF,MAAAA,MAAM,CAACG,iBAAP,CAAyBN,IAAzB;;AACAG,MAAAA,MAAM,CAACI,SAAP,GAAmB,YAAM;AACrB,cAAKC,QAAL,CAAc;AAAER,UAAAA,IAAI,EAAES,MAAM,CAACN,MAAM,CAACO,MAAR;AAAd,SAAd;;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,MAAKa,KAAL,CAAWX,IAAjC;AACH,OAHD;AAIH,KAlBL;;AAAA,6DAoBa,YAAM;AACXJ,MAAAA,KAAK,CAACG,cAAN;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAN,MAAAA,IAAI,CAACU,KAAL,CAAWU,GAAX,CAAe,MAAKD,KAAL,CAAWX,IAA1B,EAAgC,iBAAOa,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,qBACxBD,GADwB;AAAA;AAAA;AAAA;;AAExBhB,gBAAAA,OAAO,CAACkB,KAAR,CAAcF,GAAd;AAFwB;;AAAA;AAK5B,sBAAKL,QAAL,CAAc;AAAEQ,kBAAAA,QAAQ,EAAEF,GAAG,CAAC,CAAD,CAAH,CAAOG;AAAnB,iBAAd;;AACApB,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,MAAKa,KAAL,CAAWK,QAAnC;;AAN4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhC;AAUH,KAjCL;;AAAA;AAAA;;AAAA;AAAA;AAAA,yCACyB;AACjB,WAAKR,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAE,IADI;AAEVgB,QAAAA,QAAQ,EAAC;AAFC,OAAd;AAIH;AANL;AAAA;AAAA,6BAkCa;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKE,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIK,KAAKH,QAAL,GAAe,KAAKL,KAAL,CAAWK,QAA1B,GAAoC,kBAJzC,CADJ;AAQH;AA3CL;;AAAA;AAAA,EAA2BtB,SAA3B;AA8CA,eAAeC,KAAf","sourcesContent":["import ipfs from '../ipfs';\nimport React, { Component } from 'react'\n\n\n\nexport class index extends Component {\n    componentWillMount() {\n        this.setState({\n            file: null,\n            ipfsHash:null\n        })\n    }\n\n    captureChange = (event) => {\n        console.log(\"caputreFile\")\n        event.preventDefault()\n        const file = event.target.files[0]\n        const reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => {\n            this.setState({ file: Buffer(reader.result) })\n            console.log('buffer', this.state.file)\n        }\n    }\n\n    submit = () => {\n        event.preventDefault()\n        console.log(\"onSubmit\")\n        ipfs.files.add(this.state.file, async (err, res) => {\n            if (err) {\n                console.error(err)\n                return\n            }\n            this.setState({ ipfsHash: res[0].hash })\n            console.log('ipfsHash', this.state.ipfsHash)\n\n\n        })\n    }\n    render() {\n        return (\n            <div>\n                <input type=\"file\" onChange={this.captureChange} />\n                <button onClick={this.submit}>Submit</button>\n\n                {this.ipfsHash ?this.state.ipfsHash: \"Upload some file\"}\n            </div>\n        )\n    }\n}\n\nexport default index\n\n\n"]},"metadata":{},"sourceType":"module"}