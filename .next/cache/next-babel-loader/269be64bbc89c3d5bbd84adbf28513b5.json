{"ast":null,"code":"var _jsxFileName = \"/home/cbkm/Documents/IPFS/myapps/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ipfs from '../ipfs';\nimport React, { Component } from 'react';\nexport class index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"captureChange\", event => {\n      console.log(\"caputreFile\");\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          file: Buffer(reader.result)\n        });\n        console.log('buffer', this.state.buffer);\n      };\n    });\n  }\n\n  componentWillMount() {\n    this.setState({\n      file: null\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.captureChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/home/cbkm/Documents/IPFS/myapps/pages/index.js"],"names":["ipfs","React","Component","index","event","console","log","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","Buffer","result","state","buffer","componentWillMount","render","captureChange"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,OAAO,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;;AAAA,2CAOhBE,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,YAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAf;AACAF,MAAAA,MAAM,CAACG,iBAAP,CAAyBN,IAAzB;;AACAG,MAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACrB,aAAKC,QAAL,CAAc;AAAER,UAAAA,IAAI,EAAES,MAAM,CAACN,MAAM,CAACO,MAAR;AAAd,SAAd;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKa,KAAL,CAAWC,MAAjC;AACH,OAHD;AAIH,KAjBgC;AAAA;;AACjCC,EAAAA,kBAAkB,GAAG;AACjB,SAAKL,QAAL,CAAc;AACVR,MAAAA,IAAI,EAAE;AADI,KAAd;AAGH;;AAaDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAxBgC;AA2BrC,eAAepB,KAAf","sourcesContent":["import ipfs from '../ipfs';\nimport React, { Component } from 'react'\n\n\n\nexport class index extends Component {\n    componentWillMount() {\n        this.setState({\n            file: null\n        })\n    }\n\n    captureChange = (event) => {\n        console.log(\"caputreFile\")\n        event.preventDefault()\n        const file = event.target.files[0]\n        const reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => {\n            this.setState({ file: Buffer(reader.result) })\n            console.log('buffer', this.state.buffer)\n        }\n    }\n    render() {\n        return (\n            <div>\n                <input type=\"file\" onChange={this.captureChange} />\n            </div>\n        )\n    }\n}\n\nexport default index\n\n\n"]},"metadata":{},"sourceType":"module"}