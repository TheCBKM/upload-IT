{"ast":null,"code":"var _jsxFileName = \"/home/cbkm/Documents/IPFS/myapps/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ipfs from '../ipfs';\nimport React, { Component } from 'react';\nconst accepts = [{\n  name: \"images\",\n  acc: \"image/*\"\n}, {\n  name: \"audio\",\n  acc: \"audio/*\"\n}, {\n  name: \"pdf\",\n  acc: \"application/pdf,application/msword,\"\n}];\nexport class index extends Component {\n  constructor(props) {\n    this.state = {\n      file: null,\n      ipfsHash: null,\n      format: \"null\"\n    };\n    super(props);\n\n    _defineProperty(this, \"captureChange\", event => {\n      console.log(\"caputreFile\");\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          file: Buffer(reader.result)\n        });\n        console.log('buffer', this.state.file);\n      };\n    });\n\n    _defineProperty(this, \"submit\", event => {\n      event.preventDefault();\n      console.log(\"onSubmit\");\n      ipfs.files.add(this.state.file, async (err, res) => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n\n        this.setState({\n          ipfsHash: res[0].hash\n        });\n        console.log(res);\n        console.log('ipfsHash', this.state.ipfsHash);\n      });\n    });\n\n    _defineProperty(this, \"format\", event => {\n      event.preventDefault();\n      console.log(\"onChange\");\n      this.setState({\n        format: \"res[0].hash \"\n      });\n      console.log('ipfsHash', this.state);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, __jsx(\"select\", {\n      onChange: this.format,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Choose....\"), accepts.map(a => __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, a.name))), __jsx(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: this.captureChange,\n      accept: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), __jsx(\"button\", {\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Submit\"), this.state.ipfsHash ? this.state.ipfsHash : \"Upload some file\", __jsx(\"img\", {\n      src: `https://ipfs.io/ipfs/${this.state.ipfsHash}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/home/cbkm/Documents/IPFS/myapps/pages/index.js"],"names":["ipfs","React","Component","accepts","name","acc","index","constructor","props","state","file","ipfsHash","format","event","console","log","preventDefault","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","Buffer","result","add","err","res","error","hash","render","map","a","captureChange","submit"],"mappings":"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","sourcesContent":["import ipfs from '../ipfs';\nimport React, { Component } from 'react'\n\nconst accepts = [\n    { name: \"images\", acc: \"image/*\", },\n    { name: \"audio\", acc: \"audio/*\", },\n    { name: \"pdf\", acc: \"application/pdf,application/msword,\" }\n\n]\n\n\n\n\nexport class index extends Component {\n    constructor(props) {\n        this.state = {\n            file: null,\n            ipfsHash: null,\n            format: \"null\"\n        }\n        super(props);\n    }\n\n\n    captureChange = (event) => {\n        console.log(\"caputreFile\")\n        event.preventDefault()\n        const file = event.target.files[0]\n        const reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => {\n            this.setState({ file: Buffer(reader.result) })\n            console.log('buffer', this.state.file)\n        }\n    }\n\n    submit = (event) => {\n\n\n        event.preventDefault()\n        console.log(\"onSubmit\")\n        ipfs.files.add(this.state.file, async (err, res) => {\n            if (err) {\n                console.error(err)\n                return\n            }\n            this.setState({ ipfsHash: res[0].hash })\n            console.log(res)\n            console.log('ipfsHash', this.state.ipfsHash)\n\n\n        })\n    }\n    format = (event) => {\n        event.preventDefault()\n        console.log(\"onChange\")\n\n        this.setState({ format: \"res[0].hash \" })\n        console.log('ipfsHash', this.state)\n\n\n\n\n    }\n    render() {\n        return (\n            <div>\n                <select onChange={this.format}>\n                    <option>Choose....</option>\n                    {\n                        accepts.map(a =>\n                            <option>{a.name}</option>\n                        )\n                    }\n                </select>\n                <input type=\"file\" multiple onChange={this.captureChange} accept=\"\" />\n                <button onClick={this.submit}>Submit</button>\n                {this.state.ipfsHash ? this.state.ipfsHash : \"Upload some file\"}\n                <img src={`https://ipfs.io/ipfs/${this.state.ipfsHash}`} />\n\n\n            </div>\n        )\n    }\n}\n\nexport default index\n\n\n"]},"metadata":{},"sourceType":"module"}